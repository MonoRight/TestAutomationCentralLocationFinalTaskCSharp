// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestAutomationCentralLocationFinalTaskCSharp.Feature
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("FinalTask BBC testing functionality")]
    public partial class FinalTaskBBCTestingFunctionalityFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "BBCScenarios.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Feature", "FinalTask BBC testing functionality", "  As a User\r\n  I want to test few functions of the site\r\n  So that I can be sure " +
                    "that site works correctly", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check main article on the site")]
        [NUnit.Framework.CategoryAttribute("BBC1")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Anger as Texas police alter key details of shooting", null)]
        public void CheckMainArticleOnTheSite(string homePage, string index, string text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("index", index);
            argumentsOfScenario.Add("text", text);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check main article on the site", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
    testRunner.When("User clicks News button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
    testRunner.Then(string.Format("User checks that main {0} article contains \'{1}\'", index, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check first <count> secondary articles")]
        [NUnit.Framework.CategoryAttribute("BBC1")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "5", "Husband of killed Texas teacher \'dies of grief\';Ancient DNA reveals secrets of Po" +
            "mpeii victims;\'I\'m proud my coming out inspired others in sport\';Australia frees" +
            " asylum family after public outcry;Amber Heard: It\'s easy to forget I\'m a human " +
            "being", null)]
        public void CheckFirstCountSecondaryArticles(string homePage, string count, string order, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("count", count);
            argumentsOfScenario.Add("order", order);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check first <count> secondary articles", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 16
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 17
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 18
    testRunner.When("User clicks News button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 19
    testRunner.Then(string.Format("User checks first {0} articles in \'{1}\'", count, order), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check first secondary articles")]
        [NUnit.Framework.CategoryAttribute("BBC1")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Ministers give coronavirus restrictions update", null)]
        public void CheckFirstSecondaryArticles(string homePage, string index, string text, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("index", index);
            argumentsOfScenario.Add("text", text);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check first secondary articles", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 25
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 26
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 27
    testRunner.And("User clicks News button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
    testRunner.And("User copies Coronavirus selection text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
    testRunner.And("User clicks Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
    testRunner.And("User insert copied text to Search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
    testRunner.When("User clicks Search request button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
    testRunner.Then(string.Format("User checks that {0} article contains \'{1}\'", index, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check sending story with correct data")]
        [NUnit.Framework.CategoryAttribute("BBC1")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Sorry for interruption, it\'s just testing form for project:^)", "Dmytro", "gmailtestemail@gmail.com", "123123123123", "Ukraine, Kyiv", "Hey Dmytro, thanks for asking your question: ;Sorry for interruption, it\'s just t" +
            "esting form for project:^);", "If we\'re able to investigate it further, we\'ll email you at gmailtestemail@gmail." +
            "com.", null)]
        public void CheckSendingStoryWithCorrectData(string homePage, string index, string story, string name, string email, string number, string location, string firstParagraph, string secondParagraph, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("index", index);
            argumentsOfScenario.Add("story", story);
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("number", number);
            argumentsOfScenario.Add("location", location);
            argumentsOfScenario.Add("firstParagraph", firstParagraph);
            argumentsOfScenario.Add("secondParagraph", secondParagraph);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check sending story with correct data", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 38
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 39
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
    testRunner.And("User clicks News button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
    testRunner.And("User clicks Coronavirus selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
    testRunner.And(string.Format("User clicks {0} Your Coronavirus Stories selection", index), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
    testRunner.And("User clicks How to share with BBC News article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
    testRunner.And("User closes pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
    testRunner.And(string.Format("User fills form with data: story - {0}, name - {1}, email - {2}, contact number -" +
                            " {3}, location - {4}", story, name, email, number, location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
    testRunner.And("User clicks on checkBox I accept the Terms of Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
    testRunner.When("User clicks Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 48
    testRunner.Then(string.Format("User checks result of sending story, it must contain \'{0}\' and \'{1}\'", firstParagraph, secondParagraph), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check sending story with empty data")]
        [NUnit.Framework.CategoryAttribute("BBC1")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "", "", "", "", "", "can\'t be blank", "Name can\'t be blank", "must be accepted", null)]
        public void CheckSendingStoryWithEmptyData(string homePage, string index, string story, string name, string email, string number, string location, string errorStory, string errorName, string errorTerms, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("index", index);
            argumentsOfScenario.Add("story", story);
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("number", number);
            argumentsOfScenario.Add("location", location);
            argumentsOfScenario.Add("errorStory", errorStory);
            argumentsOfScenario.Add("errorName", errorName);
            argumentsOfScenario.Add("errorTerms", errorTerms);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check sending story with empty data", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 54
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 55
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 56
    testRunner.And("User clicks News button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
    testRunner.And("User clicks Coronavirus selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
    testRunner.And(string.Format("User clicks {0} Your Coronavirus Stories selection", index), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
    testRunner.And("User clicks How to share with BBC News article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
    testRunner.And("User closes pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
    testRunner.And(string.Format("User fills form with data: story - {0}, name - {1}, email - {2}, contact number -" +
                            " {3}, location - {4}", story, name, email, number, location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
    testRunner.When("User clicks Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 63
    testRunner.Then(string.Format("User checks that error messages displayed: error story empty field - {0}, error n" +
                            "ame empty field - {1}, error acceptance terms - {2}", errorStory, errorName, errorTerms), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check sending story with invalid email")]
        [NUnit.Framework.CategoryAttribute("BBC1")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Sorry for interruption, it\'s just testing form for project:^)", "Dmytro", "incorrectemail", "123123123123", "Ukraine, Kyiv", "Email address is invalid", null)]
        public void CheckSendingStoryWithInvalidEmail(string homePage, string index, string story, string name, string email, string number, string location, string message, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("index", index);
            argumentsOfScenario.Add("story", story);
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("number", number);
            argumentsOfScenario.Add("location", location);
            argumentsOfScenario.Add("message", message);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check sending story with invalid email", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 69
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 70
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 71
    testRunner.And("User clicks News button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
    testRunner.And("User clicks Coronavirus selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
    testRunner.And(string.Format("User clicks {0} Your Coronavirus Stories selection", index), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
    testRunner.And("User clicks How to share with BBC News article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
    testRunner.And("User closes pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
    testRunner.And(string.Format("User fills form with data: story - {0}, name - {1}, email - {2}, contact number -" +
                            " {3}, location - {4}", story, name, email, number, location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
    testRunner.And("User clicks on checkBox I accept the Terms of Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
    testRunner.When("User clicks Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
    testRunner.Then(string.Format("User checks error \'{0}\' because of invalid email", message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check scores of football match with specified teams, championship, year and month" +
            "")]
        [NUnit.Framework.CategoryAttribute("BBC2")]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Scottish Championship", "JUL", "2021", "Arbroath", "Inverness Caledonian Thistle", "0", "1", null)]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "EUROPA LEAGUE", "FEB", "2022", "Borussia Dortmund", "Rangers", "2", "4", null)]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Europa Conference League", "JUL", "2021", "Linfield", "Borac Banja Luka", "4", "0", null)]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "Africa Cup of Nations", "JAN", "2022", "Egypt", "Morocco", "2", "1", null)]
        [NUnit.Framework.TestCaseAttribute("https://www.bbc.com/", "0", "French Coupe de France", "JAN", "2022", "Vannes", "Paris Saint Germain", "0", "4", null)]
        public void CheckScoresOfFootballMatchWithSpecifiedTeamsChampionshipYearAndMonth(string homePage, string index, string championship, string month, string year, string team1, string team2, string score1, string score2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BBC2"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("homePage", homePage);
            argumentsOfScenario.Add("index", index);
            argumentsOfScenario.Add("championship", championship);
            argumentsOfScenario.Add("month", month);
            argumentsOfScenario.Add("year", year);
            argumentsOfScenario.Add("team1", team1);
            argumentsOfScenario.Add("team2", team2);
            argumentsOfScenario.Add("score1", score1);
            argumentsOfScenario.Add("score2", score2);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check scores of football match with specified teams, championship, year and month" +
                    "", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 86
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 87
    testRunner.Given(string.Format("User opens \'{0}\' page", homePage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 88
    testRunner.And("User clicks Sport button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
    testRunner.And(string.Format("User clicks on {0} Football section", index), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
    testRunner.And("User clicks on Scores & Fixtures section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
    testRunner.And(string.Format("User enters {0} in Enter a team or competition input", championship), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
    testRunner.And(string.Format("User chooses {0} from the drop down list", index), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
    testRunner.And(string.Format("User select {0} and {1} of competition", month, year), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
    testRunner.When(string.Format("User finds match between {0} and {1} with score for first team - {2}, and score f" +
                            "or second team - {3}", team1, team2, score1, score2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 95
    testRunner.Then(string.Format("User compares displayed scores with scores from previous page and specified score" +
                            "s: {0}, {1}", score1, score2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
